@model IList<UserViewModel>

@{
    ViewData["Title"] = "Kingsport Mill Evacuation Logger";
}

<h2>@ViewData["Title"]</h2>

<form asp-action="Index">
    @Html.Grid(Model).Build(columns =>
    {
        var i = 0;

        columns.Add(model => model.Status).Titled("Status").RenderedAs(model =>
        {
            var id = $"<input type=\"hidden\" name=\"[{i}].Id\" value=\"{model.Id}\">";
            var hereButton = $"<label class=\"radio-label\"><input type=\"radio\" name=\"[{i}].Status\" value=\"Here\"{(model.Status == UserEvacuationStatus.Here ? " checked" : "")}> Here</label>";
            var awayButton = $"<label class=\"radio-label\"><input type=\"radio\" name=\"[{i}].Status\" value=\"Away\"{(model.Status == UserEvacuationStatus.Away ? " checked" : "")}> Away</label>";
            var missingButton = $"<label class=\"radio-label\"><input type=\"radio\" name=\"[{i}].Status\" value=\"Missing\"{(model.Status == UserEvacuationStatus.Missing ? " checked" : "")}> Missing</label>";
            i++;
            return $"{id} {hereButton} {awayButton} {missingButton}";
        }).Encoded(false);
        columns.Add(model => model.LastName).Titled("Last Name");
        columns.Add(model => model.FirstName).Titled("First Name");
        columns.Add(model => model.Department).Titled("Department");
        columns.Add(model => model.PhoneNumber).Titled("Phone Number");
    }).Filterable().RowCss(model => model.Status == UserEvacuationStatus.Unknown ? "bg-warning" : model.Status == UserEvacuationStatus.Here ? "bg-success" : model.Status == UserEvacuationStatus.Away ? "bg-muted" : "bg-danger")
    
    <input type="submit" value="Submit" class="btn btn-success" id="refreshButton"/>
</form>
